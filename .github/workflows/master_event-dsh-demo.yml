# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - event-dsh-demo

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build frontend with npm script
        run: npm run build

      - name: Install production dependencies only
        run: |
          rm -rf node_modules
          npm ci --only=production

      - name: Create deployment package
        run: |
          mkdir -p deploy-package
          cp package*.json deploy-package/
          cp -r backend deploy-package/
          cp -r dist deploy-package/
          cp -r node_modules deploy-package/
          [ -f web.config ] && cp web.config deploy-package/ || true
          [ -f startup.txt ] && cp startup.txt deploy-package/ || true
          
          # Verify data.json exists (contains user accounts and app data)
          if [ -f backend/data.json ]; then
            echo "✅ data.json found and will be preserved in deployment"
            ls -la backend/data.json
          else
            echo "⚠️ WARNING: backend/data.json not found!"
            echo "The server will create a default admin user on first run"
            echo "Default login will be: admin / password"
          fi

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deploy-package

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'event-dsh-demo'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_EVENT_DSH_DEMO }}
          